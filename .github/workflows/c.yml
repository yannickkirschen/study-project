name: Build C project

on: [ push ]

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Clone # Checkout root
        uses: actions/checkout@v4

      - name: Clone submodules # Checkout rest
        shell: bash
        run: |
          # If your submodules are configured to use SSH instead of HTTPS please uncomment the following line
          # git config --global url."https://github.com/".insteadOf "git@github.com:"
          auth_header="$(git config --local --get http.https://github.com/.extraheader)"
          git submodule sync --recursive
          git -c "http.extraheader=$auth_header" -c protocol.version=2 submodule update --init --force --recursive --depth=1

          # On a branch submodule checkout does not work
          if [ ! -d "mini-rail/lib/pico-sdk" ]; then
            git submodule add --force --name pico-sdk https://github.com/raspberrypi/pico-sdk.git mini-rail/lib/pico-sdk
          fi

          if [ ! -d "mini-rail/lib/stb" ]; then
            git submodule add --force --name stb https://github.com/nothings/stb.git mini-rail/lib/stb
          fi

          if [ ! -d "mini-rail/lib/can2040" ]; then
            git submodule add --force --name can2040 https://github.com/KevinOConnor/can2040.git mini-rail/lib/can2040
          fi

      - name: Install dependencies
        run: |
          sudo apt update
          sudo apt dist-upgrade
          sudo apt install -y cmake gcc-arm-none-eabi libnewlib-arm-none-eabi libstdc++-arm-none-eabi-newlib sqlite3 libsdl2-dev

      - name: Build for host
        run: |
          export PICO_SDK_PATH=$(pwd)/mini-rail/lib/pico-sdk
          export CAN2040_LIB_PATH=$(pwd)/mini-rail/lib/can2040

          cmake -D TARGET_ARCH=host -B mini-rail/build/host -S mini-rail
          make -C mini-rail/build/host

      - name: Build for pico
        run: |
          export PICO_SDK_PATH=$(pwd)/mini-rail/lib/pico-sdk
          export CAN2040_LIB_PATH=$(pwd)/mini-rail/lib/can2040

          cmake -D TARGET_ARCH=pico -B mini-rail/build/embedded -S mini-rail
          make -C mini-rail/build/embedded
